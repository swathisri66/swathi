apiVersion: v1
kind: Service
metadata:
  name: kubebox
  labels:
    template: kubebox
spec:
  type: NodePort
  ports:
    - name: kubebox
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    name: kubebox
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubebox
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: kubebox
          servicePort: 8080
    # TO BE UPDATED IF NEEDED
    # host:
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubebox
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: kubebox
  template:
    metadata:
      name: kubebox
      labels:
        name: kubebox
    spec:
      serviceAccountName: kubebox
      containers:
      - image: astefanutti/kubebox:server
        imagePullPolicy: Always
        name: kubebox
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubebox
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubebox
subjects:
- kind: ServiceAccount
  name: kubebox
  # TO BE UPDATED IF NEEDED
  namespace: default
roleRef:
  kind: ClusterRole
  name: kubebox
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubebox
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
